
package GUI;

public class Ayuda extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    public Ayuda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtAyuda = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtAyuda.setEditable(false);
        jtxtAyuda.setColumns(20);
        jtxtAyuda.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jtxtAyuda.setRows(5);
        jtxtAyuda.setText("Reglas básicas del juego:\n\n-El objetivo principal consiste en tener la mayoria de discos del mismo color al final del juego.\n-Se debe \"flanquear\" lso discos del oponente, para convertir sus discos en un color propio.\n-Flanquear significa colocar un disco en el tablero para que la fila (o filas) de disco (s) de su oponente esté bordeada en cada\nextremo por un disco de su color. (Una \"fila\" puede estar compuesta por uno o más discos).\n-Las negras siempre se mueven primero.\n-Si en su turno no se puede \"flanquear\" su turno se perdera y el oponente debe realizar la siguiente jugada.\n-Los jugadores no pueden saltar sus propios discos de color para flanquear a un disco contrario.\n-Los discos solo se pueden \"flanquear\" como resultado directo de un movimiento y deben caer en la línea directa del disco colocado hacia abajo.\n-Todos los discos flanqueados en cualquier movimiento deben voltearse, incluso si es una ventaja para el jugador no voltearlos en absoluto. \n-Una vez que un disco se coloca en una casilla, nunca se puede mover a otra casilla más adelante en el juego. \n-Cuando ya no es posible que ninguno de los jugadores se mueva, el juego termina. Los discos se cuentan y el jugador que muestra la mayoría \n  de su color es el ganador.\n\nFuente: https://www.worldothello.org/about/about-othello/othello-rules/official-rules/\n\nApartado un jugador:\n\nSe necesita que mínimo haya un usuario registrado, de otra forma no podrá acceder. Aquí se juega usuario contra máquina.\n\nApartado dos jugadores:\n\nSe necesita que mínimo hayan dos usuarios registrados para poder acceder. Aquí se juega usuario contra usuario.\n\nApartado de registro:\n\nEn él podrá registrar los usuarios que entrará a la partida de Othello. Se le solicitará su nombre mediante una ventana interactiva.");
        jScrollPane1.setViewportView(jtxtAyuda);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 920, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ayuda dialog = new Ayuda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                
                
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jtxtAyuda;
    // End of variables declaration//GEN-END:variables
}
